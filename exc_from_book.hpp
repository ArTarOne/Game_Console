#ifndef EXC_FROM_BOOK_HPP
#define EXC_FROM_BOOK_HPP

#include "exc_from_book_class.hpp"

// Задачки из книгк "Изучаем С++ через программирование игр
// Автор: Майкл Доусон

// 2 глава книги
int lost_fortune(); // утраченый клад = ) Пробую воссоздать.

int guess_my_number(); // классическая ишра в "угадай число"

// 3 глава книги

int word_jumble(); // словомеска = ) Перепиливаю игру.

// 4 глава книги
// Планирование игры:
///
/// \brief hungman
/// Описание планирования игры
/// \details
/// Создать подборку слов
/// Выбрать из подборки одно слово, выбрать его
/// Если игрок еще не превысил лимит ошибок, но и не разгадал слово
///     Сообщить игроку, сколько ошибок он еще имеет право допустить
///     Показать игроку буквы, которые он угадал
///     Покзать игроку, какую часть загаданного слова слова он уже открыл
///     Получить от игрока следующий вариант буквы
///     Если игрок предложит букву, которую он уже угадал
///         Получить вариант игрока
///         Добавить новый вариант в множество использованных букв
///     Если предложенная буква присутствует в загаданном слове
///         Сообщить пользователю, что эта догпдка верна
///         Добавить в уже имеющийся фрагмент слова угаданную букву
///     Иначе
///         Сообщить игроку, что предложенный им вариант неверен
///         Увеличить на еденицу количество ошибочных вариантов, предложенных игроком
///     Если игрок допустил слишком много ошибок
///         Сообщить игроку, что он повешен
///     Иначе
///         Поздравить игрока с разгадкой секретного слова
///
/// \return
///

int hungman(); // игра виселица = )

// 5 глава
//int f5_askNumber(int high, int low = 1);
int give_me_a_number(int param = 10); // игра -дай мне номер
int taking_gamage(const int param = 100); // игра - получи урон
int mad_lib(); // игра - сумашедшие библиотекари

// 6 глава
// Псевдокод игры: Крестики-Нолики
///
/// \brief tic_tac_toi
/// Описание игры Крестики-Нолики (псевдокод)
/// \details
/// Создать пустое поле для игры в Крестики-Нолики
/// Вывести на экран правила игры
/// Определить кто ходит первым
/// Отобразить поле
/// Если пока никто не побдил и не наступила ничья
///     И если сей час ход пользователя
///         Получить ход пользователя
///         Обновить игровое поле с учетом хода пользователя
///     Иначе
///         Вычислить ход компьютера
///         Обновить поле с учетом хода компьютера
///     Отобразить поле
///     Передать ход сопернику
/// Поздравить победителя или объявить ничью
///
/// \return
///
int tic_tac_toi(const bool rnd_frst_move = false); // игра - крестики-нолики.

// 7 глава
int swap_pointer_ver(); // программа для работы с указателями.
int inventory_pointer(); // демонстритует возврат указателя
int array_passer(); // взаимоотношение между массивом и указателем
int tic_tac_toe_ver_pointer(const bool rnd_frst_move = false); // игра - крестики-нолики 2.0

// 8 глава
int G8_CritterBegin(); // программа работы с классовм Critter
int G8_TamagochiBook(); // Игра - тамагочи из книги

// 9 глава
int G9_critter_farm(); // ферма тамагочи,  агрегирование
int G9_critter_friend(); // дружественные функции и перегрузка оператора
int G9_heap(); // динамическое выделение памяти и утечка
int G9_critter_heap_game(); // Тамагочи с кучей = )
int G9_Lobby_game(); // игра с лобби и игроками

// 10 глава
int G10_enemy_boss1(); // первая программа с простым наследованием.
int G10_enemy_boss2(); // вторая программа с наследованием protected.
int G10_virtual_boss(); // игра overriding Boss 3.0 / virtual function
int G10_polymorphicBadGay(); // принципы работы полиморфизма и виртуальные детрукторы
int G10_abstractCreater(); // пример абстрактных (базовых) классов.

// Псевдокод игры: BlackJack
///
/// \brief blackjack
/// Описание игры BlackJack (псевдокод)
/// \details
/// Раздать игрокам и дилеру две карты
/// Спрятать первую карту дилера
/// Отобразить руки игроков и дилера
/// Раздать игрокам дополнительные карты
/// Показать первую карту дилера
/// Раздать дополнительные карты дилеру
/// Если у дилера перебор
///     Все игроки без перебора выйграли
/// Иначе
///     Для каждого игрока
///         Если у игрока нет перебора
///             Игрок побеждает
///         Иначе если сумма очков игрока меньше, чем у дилера
///             Игрок проигрывает
///         Иначе
///             Объявление ничьей
///     Удалить карты всех игроков
///
/// \return
///
int G10_BlackJack(); // игра в blackjack
#endif //EXC_FROM_BOOK_HPP
